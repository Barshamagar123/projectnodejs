<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Team - Hotel Admin</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        .status-active { background-color: #D1FAE5; color: #065F46; }
        .status-onleave { background-color: #FEF3C7; color: #92400E; }
        .status-inactive { background-color: #FEE2E2; color: #991B1B; }
    </style>
</head>
<body class="bg-gray-100">
    <div class="flex">
        <%- include("../sidebar.ejs") %>
        
        <!-- Main content -->
        <div class="flex-1 overflow-auto">
            <div class="p-6">
                <div class="flex justify-between items-center mb-6">
                    <h1 class="text-2xl font-bold text-gray-800">Team Management</h1>
                    <a href="/addTeam">
                        <button class="bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded-lg">
                            <i class="fas fa-plus mr-2"></i>Add Team Member
                        </button>
                    </a>
                </div>

                <!-- Search and filter -->
                <div class="bg-white p-4 rounded-lg shadow mb-6">
                    <div class="flex flex-col md:flex-row md:items-center md:space-x-4">
                        <div class="flex-1 mb-4 md:mb-0">
                            <input type="text" placeholder="Search team members..." 
                                   class="w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500"
                                   id="searchInput">
                        </div>
                        <div class="flex space-x-2">
                            <select class="px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500"
                                    id="departmentFilter">
                                <option value="">All Departments</option>
                                <option>Front Office</option>
                                <option>Food Production</option>
                                <option>Food & Beverage</option>
                                <option>Housekeeping</option>
                            </select>
                            <select class="px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500"
                                    id="positionFilter">
                                <option value="">All Positions</option>
                            </select>
                        </div>
                    </div>
                </div>

                <!-- Team table -->
                <div class="bg-white rounded-lg shadow overflow-hidden">
                    <div class="overflow-x-auto">
                        <table class="min-w-full divide-y divide-gray-200">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">ID</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Team Member</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Department</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Position</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Join Date</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                                </tr>
                            </thead>
                            <tbody class="bg-white divide-y divide-gray-200" id="teamTableBody">
                                <% groups.forEach(function(team){ %>
                                <tr data-department="<%= team.department || '' %>" 
                                    data-position="<%= team.position || '' %>">
                                    <td class="px-6 py-4 whitespace-nowrap"><%= team.id %></td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="flex items-center">
                                            <div class="flex-shrink-0 h-10 w-10">
                                                <% if(team.image) { %>
                                                    <img class="h-10 w-10 rounded-full" src="<%= team.image %>" alt="<%= team.full_name %>">
                                                <% } else { %>
                                                    <div class="h-10 w-10 rounded-full bg-gray-200 flex items-center justify-center text-gray-500">
                                                        <i class="fas fa-user"></i>
                                                    </div>
                                                <% } %>
                                            </div>
                                            <div class="ml-4">
                                                <div class="text-sm font-medium text-gray-900"><%= team.full_name %></div>
                                                <div class="text-sm text-gray-500"><%= team.email %></div>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                        <%= team.department || 'Not specified' %>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 position-cell">
                                        <%= team.position || 'Not specified' %>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                        <%= team.joindate ? new Date(team.joindate).toLocaleDateString() : 'N/A' %>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <% const statusClass = {
                                            'Active': 'status-active',
                                            'On Leave': 'status-onleave', 
                                            'Inactive': 'status-inactive'
                                        }[team.status] || 'bg-gray-100 text-gray-800' %>
                                        
                                        <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full <%= statusClass %>">
                                            <%= team.status || 'Unknown' %>
                                        </span>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                        <a href="/viewTeam/<%= team.id %>" class="text-primary-600 hover:text-primary-900 mr-3">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a href="/editTeam/<%= team.id %>" class="text-blue-600 hover:text-blue-900 mr-3">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <a href="/deleteTeam/<%= team.id %>" class="text-red-600 hover:text-red-900" onclick="return confirm('Are you sure?')">
                                            <i class="fas fa-trash"></i>
                                        </a>
                                    </td>
                                </tr>
                                <% }); %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Department-Position mapping that matches your addTeam form exactly
        const positionMapping = {
            'Front Office': ['Head Of Department', 'front office manager', 'Supervisor', 'Staff'],
            'Food Production': ['Head Of Department', 'Supervisor', 'Staff'],
            'Food & Beverage': ['Head Of Department', 'food and beverage manager', 'Supervisor', 'Staff'],
            'Housekeeping': ['Head Of Department', 'Supervisor', 'Staff']
        };

        // DOM elements
        const departmentFilter = document.getElementById('departmentFilter');
        const positionFilter = document.getElementById('positionFilter');
        const searchInput = document.getElementById('searchInput');
        const teamTableBody = document.getElementById('teamTableBody');

        // Initialize position filter with all unique positions from the table
        function initializePositionFilter() {
            // Clear existing options
            positionFilter.innerHTML = '<option value="">All Positions</option>';
            
            // Get all unique positions from the table
            const positionCells = document.querySelectorAll('.position-cell');
            const allPositions = new Set();
            
            positionCells.forEach(cell => {
                const position = cell.textContent.trim();
                if (position && position !== 'Not specified') {
                    allPositions.add(position);
                }
            });

            // Add positions to the filter dropdown
            Array.from(allPositions).sort().forEach(position => {
                const option = document.createElement('option');
                option.value = position;
                option.textContent = position;
                positionFilter.appendChild(option);
            });
        }

        // Update position filter based on selected department
        function updatePositionFilter() {
            const selectedDept = departmentFilter.value;
            
            // Clear existing options
            positionFilter.innerHTML = '<option value="">All Positions</option>';
            
            if (selectedDept && positionMapping[selectedDept]) {
                // Add positions specific to the selected department
                positionMapping[selectedDept].forEach(position => {
                    const option = document.createElement('option');
                    option.value = position;
                    option.textContent = position;
                    positionFilter.appendChild(option);
                });
            } else {
                // Show all positions when no department is selected
                initializePositionFilter();
            }
            
            // Apply filters
            filterTeamMembers();
        }

        // Filter team members based on search and filter criteria
        function filterTeamMembers() {
            const searchTerm = searchInput.value.toLowerCase();
            const selectedDept = departmentFilter.value;
            const selectedPosition = positionFilter.value;

            document.querySelectorAll('#teamTableBody tr').forEach(row => {
                const dept = row.getAttribute('data-department') || '';
                const positionCell = row.querySelector('.position-cell');
                const position = positionCell ? positionCell.textContent.trim() : '';
                const name = (row.querySelector('td:nth-child(2) .text-sm.font-medium').textContent || '').toLowerCase();
                const email = (row.querySelector('td:nth-child(2) .text-sm.text-gray-500').textContent || '').toLowerCase();

                // Check if row matches all filter criteria
                const matchesDept = !selectedDept || dept === selectedDept;
                const matchesPosition = !selectedPosition || position === selectedPosition;
                const matchesSearch = !searchTerm || 
                    name.includes(searchTerm) || 
                    email.includes(searchTerm) || 
                    dept.toLowerCase().includes(searchTerm) || 
                    position.toLowerCase().includes(searchTerm);

                // Show/hide row based on filters
                row.style.display = (matchesDept && matchesPosition && matchesSearch) ? '' : 'none';
            });
        }

        // Event listeners
        departmentFilter.addEventListener('change', updatePositionFilter);
        positionFilter.addEventListener('change', filterTeamMembers);
        searchInput.addEventListener('input', filterTeamMembers);

        // Initialize filters when page loads
        document.addEventListener('DOMContentLoaded', function() {
            initializePositionFilter();
            filterTeamMembers();
        });
    </script>
</body>
</html>